@{
    ViewData["Title"] = "Doctor";
    Layout = "~/Views/Shared/_DoctorNavbar.cshtml";
}

@model dynamic

<form id="formDoctorSettings" asp-controller="Doctor" asp-action="DoctorSaveChanges" method="post" enctype="multipart/form-data" onsubmit="return validateForm()">
    <div class="card mb-4 mt-5">
        <h5 class="card-header">Doctor Profile</h5>
        <div class="card-body">
            <div class="d-flex align-items-start align-items-sm-center gap-4">
                <img src="@Model.Doctor.profileImgPath" alt="user-avatar" class="d-block rounded" height="100" width="100" id="uploadedAvatar">
                <div class="button-wrapper">
                    <label for="files" class="btn btn-primary me-2 mb-4" tabindex="0">
                        <span class="d-none d-sm-block"> <i class="fa-solid fa-upload"></i> Upload new photo</span>
                        <i class="bx bx-upload d-block d-sm-none"></i>
                        <input type="file" id="files" name="files" class="account-file-input" hidden="" accept="image/png, image/jpeg" />
                    </label>
                    <p class="text-muted mb-0">Allowed JPG or PNG.</p>
                </div>
            </div>
        </div>
        <hr class="my-0">
        <div class="card-body">
            <div class="row">
                <div class="mb-3 col-md-6">
                    <label for="firstName" class="form-label">First Name</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-user-doctor"></i></span>
                        <input class="form-control" type="text" id="name" name="name" value="@Model.Doctor.name" autofocus="">
                    </div>
                </div>
                <div class="mb-3 col-md-6">
                    <label for="lastName" class="form-label">Last Name</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-user-doctor"></i></span>
                        <input class="form-control" type="text" name="surname" id="surname" value="@Model.Doctor.surname">
                    </div>
                </div>
                <div class="mb-3 col-md-6">
                    <label for="email" class="form-label">E-mail</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-envelope"></i></span>
                        <input class="form-control" type="text" id="email" name="email" value="@Model.Doctor.email">
                    </div>
                </div>
                @* <div class="mb-3 col-md-6">
                    <label for="email" class="form-label">Password</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-key"></i></span>
                        <input class="form-control" type="password" id="password" name="password" value="@Model.Doctor.password">
                    </div>
                </div> *@
                <div class="mb-3 col-md-6">
                    <label class="form-label" for="phoneNumber">Phone Number</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-phone"></i></i></span>
                        <input type="text" id="phone" name="phone" class="form-control" value="@Model.Doctor.phone">
                    </div>
                </div>

                <div class="mb-3 col-md-6">
                    <label class="form-label" for="country">City</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-earth-americas"></i></span>
                        <select id="states" name="states" class="form-select">
                            @foreach (var state in Model.States)
                            {
                                if (@state.id == @Model.Doctor.states_id)
                                {
                                    <option selected="selected" value="@state.id">@state.name</option>
                                }
                                else
                                {
                                    <option value="@state.id"> @state.name </option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="mb-3 col-md-6">
                    <label for="address" class="form-label">Address</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-location-dot"></i></span>
                        <input type="text" class="form-control" id="address" name="address" value="@Model.Doctor.address" placeholder="Address">
                    </div>
                </div>
                <div class="mb-3 col-md-6">
                    <label for="gender" class="form-label">Gender</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-venus-mars"></i></span>
                        <select id="gender" name="gender" class="select2 form-select">
                            @foreach (var gender in Model.Gender)
                            {
                                if (@gender.id == @Model.Doctor.gender_id)
                                {
                                    <option selected="selected" value="@gender.id">@gender.name</option>
                                }
                                else
                                {
                                    <option value="@gender.id"> @gender.name </option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="mb-3 col-md-6">
                    <label for="timeZones" class="form-label">Specialization</label>
                    <div class="input-group input-group-merge">
                        <span class="input-group-text"><i class="fa-solid fa-stethoscope"></i></span>
                        <select id="specialization" name="specialization" class="select2 form-select">
                            @foreach (var specialization in Model.Specializations)
                            {
                                if (@specialization.id == @Model.Doctor.specialization_id)
                                {
                                    <option selected="selected" value="@specialization.id">@specialization.name</option>
                                }
                                else
                                {
                                    <option value="@specialization.id"> @specialization.name </option>
                                }
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="mt-2">
                <button type="submit" class="btn btn-primary"> <i class="fa-solid fa-floppy-disk"></i> Save changes</button>
                <button type="reset" class="btn btn-outline-secondary"> <i class="fa-solid fa-xmark"></i> Cancel</button>
            </div>
        </div>
    </div>
</form>

<script>

    function validateForm() {
        var name = document.getElementById('name').value;
        var surname = document.getElementById('surname').value;
        var email = document.getElementById('email').value;
        var password = document.getElementById('password').value;
        var phone = document.getElementById('phone').value;
        var address = document.getElementById('address').value;

        if (name.trim() === '') {
            alert('Name field cannot be empty!');
            return false;
        }

        if (surname.trim() === '') {
            alert('Surname field cannot be empty!');
            return false;
        }
        if (email.trim() === '') {
            alert('Email field cannot be empty!');
            return false;
        }
        if (password.trim() === '') {
            alert('Password field cannot be empty!');
            return false;
        }

        if (phone.trim() === '') {
            alert('Phone field cannot be empty!');
            return false;
        }

        if (address.trim() === '') {
            alert('Address field cannot be empty!');
            return false;
        }

        /*
        var checkedPass = validatePassword(password);
        if (!checkedPass) {
            alert('The password must be at least 8 characters and contain at least 1 uppercase letter, 1 number and 1 special character.');
            return false;
        }
        */
        
        return true;
    }

    function validatePassword(password) {
        if (password.length < 8) {
            return false;
        }

        var uppercaseRegex = /[A-Z]/;
        if (!uppercaseRegex.test(password)) {
            return false;
        }

        var digitRegex = /[0-9]/;
        if (!digitRegex.test(password)) {
            return false;
        }

        var specialCharacterRegex = /[!@@#$%^&*()_+\-=\[\]{};':"\\|,.<>\/?]/;
        if (!specialCharacterRegex.test(password)) {
            return false;
        }

        return true;
    }

</script>
